= フィードバック

: author
   須藤功平
: institution
   株式会社クリアコード
: content-source
   SEゼミ2015 - OSS Hack 4 Beginners
: date
   2015-06-27
: allotted-time
   15m
: theme
   clear-code

= 目的の確認

参加者の\n
OSS開発参加への\n
不安を払拭

= 現状

  * 動かした？
  * 開発用にインストールした？
  * テストを実行した？

= フィードバック

  * メモが溜まっているはず
    * 不備があることを書いたやつ
    * うまくいかないことを書いたやつ
    * forkした自分のリポジトリーの\n
      issueに書いておいたやつ
  * upstream（開発元）に報告

= 報告方法

  (1) 整理する
      * 自分の考えが文章になればOK
  (2) (('wait'))((*開発者にとって*))\n
      リーダブルになるように編集
  (3) (('wait'))適切な場所に報告
      * GitHubのissueとか

= 1. 整理する

  * 自分で自分の気持ちを理解
    * 自分が読んで理解できる文章に\n
      まとめられれば理解できている
    * 自分が理解できていないことは\n
      開発者にも伝えられない！
  * メンターへ
    * メモ（断片）の文書化を手伝って\n
      (('note:例：考えを整理できるような質問をする'))

= 2. 編集する

  * ((*開発者にとって*))\n
    リーダブルになるように編集
    * 「読む人」が理解できることが大事\n
      なのは報告もコードも同じ
  * メンターへ
    * リーダブル化を手伝って\n
      (('note:例：自分が開発者ならこう読めると開発者視点を伝える'))

= 3. 報告する

  * 適切な場所に報告
    * 今回はGitHubのissue
    * OSSによって報告場所は違う
  * メンターへ
    * issue登録に二の足を踏んでいる人の背中を押してあげて\n
      (('note:例：自分が開発者ならこの報告をもらったらうれしい、と開発者視点を伝える'))
