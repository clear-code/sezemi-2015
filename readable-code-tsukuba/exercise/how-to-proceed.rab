= 練習の仕方

: author
   須藤功平
: institution
   株式会社クリアコード
: content-source
   リーダブルコード勉強会 in 筑波大
: date
   2015-07-04
: allotted-time
   5m
: theme
   clear-code

= 課題が目指すこと

(('tag:center'))
(('tag:large'))
(('tag:margin-bottom'))
↓を体験する

  * コードを読んで
  * リーダブルコードを((*見つける*))
  * ↑を活かしてコードを書く

= 課題が目指さないこと

  * テクニックをたくさん((*覚える*))
  * 難しいプログラムでも\n
    実装できるようになる
  * 速く実装できるようになる

= 課題の傾向

  * 技術的に難しいことは\n
    意図的に避けている
  * 段階的に改良していく
  * 時間内で実装しきれない分量
    * ((*すべて実装する必要はない！*))

= 練習としてやること

(('tag:center'))
(('tag:x-large'))
仕様1を実装\n
(('note:進め方の詳細はtask.mdを参照'))\n
(('note:https://github.com/clear-code/sezemi-2015/から辿れる'))

(('tag:margin-top'))
(('tag:margin-top'))
(('note:メンター：参加者がtask.mdを見つけられるようにサポート'))\n
(('note:メンター：見つけられたら教えて'))

= メモ

  * 課題は精一杯の\n
    リーダブルコードで実装する
  * リーダブルポイントをメモする
    * メモ用issueにコメント
    * 書き方は後述

= デモ

= 困ったら1

  * メンターに相談
    * メンターは((*答えを教えない*))
    * 一緒に考えてくれる
  * 参加者が考える機会を奪わない
    * メンターは新しい視点を与える
    * 「こういう視点で見ると\n
      リーダブルじゃない？」

= 困ったら2

  * まわりの参加者に相談
    * 答えを教えてもよい
    * 一緒に考えてもよい
  * ポイント
    * 答えを教えるときは理由も伝える\n
      (('note:（教える参加者が考える機会になる！）'))
    * 聞く人は理由も聞く\n
      (('note:（考え方を知ると新しい視点でコードを読める！）'))

= 困ったら3

  * 他の参加者のコードを見る
    * コードを読んで学ぶ！
    * この勉強会で大事にしていること
  * ポイント
    * 参考にするときは理由を考える
    * どうしてこのコードがリーダブル？
    * メモに書こう

= リーダブルコードおさらい

  * 読む人基準
    * 読む人が\n
      読みやすいなら\n
      リーダブル
  * 読む人の視点を意識してみて
    * どんな人が読む？
    * どんな前提知識がある？

= 課題1

= 課題1が終わったら

  * メンターに確認依頼
    * →OKなら各自休憩
  * 休憩後
    * task.mdを最初から読み直す
    * 読み直したら課題2以降を進める
    * 随時メモを書こう！

= …課題実装中…

  * 今の自分の精一杯の\n
    リーダブルコードを書こう
  * ↑をissueにメモろう
    * 実際のコード・説明・一言説明
    * 例はissueに書いてある

(('note:メンターへ：たまに「どんなメモ書いた？」と聞いて課題をこなすことではなくリーダブルコードを書くことに参加者の注意を向けてみよう'))
